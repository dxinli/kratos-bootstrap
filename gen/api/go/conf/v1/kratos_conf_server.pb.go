// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: conf/v1/kratos_conf_server.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务器
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rest      *Server_REST      `protobuf:"bytes,1,opt,name=rest,proto3" json:"rest,omitempty"`           // REST服务
	Grpc      *Server_GRPC      `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`           // gRPC服务
	Websocket *Server_Websocket `protobuf:"bytes,3,opt,name=websocket,proto3" json:"websocket,omitempty"` // Websocket服务
	Mqtt      *Server_Mqtt      `protobuf:"bytes,4,opt,name=mqtt,proto3" json:"mqtt,omitempty"`           // MQTT服务
	Kafka     *Server_Kafka     `protobuf:"bytes,5,opt,name=kafka,proto3" json:"kafka,omitempty"`         // Kafka服务
	Rabbitmq  *Server_RabbitMQ  `protobuf:"bytes,6,opt,name=rabbitmq,proto3" json:"rabbitmq,omitempty"`   // RabbitMQ服务
	Asynq     *Server_Asynq     `protobuf:"bytes,7,opt,name=asynq,proto3" json:"asynq,omitempty"`         // Asynq服务
	Machinery *Server_Machinery `protobuf:"bytes,8,opt,name=machinery,proto3" json:"machinery,omitempty"` // Machinery服务
	Sse       *Server_SSE       `protobuf:"bytes,9,opt,name=sse,proto3" json:"sse,omitempty"`             // SSE服务
	Socketio  *Server_SocketIO  `protobuf:"bytes,10,opt,name=socketio,proto3" json:"socketio,omitempty"`  // SocketIO服务
	Signalr   *Server_SignalR   `protobuf:"bytes,11,opt,name=signalr,proto3" json:"signalr,omitempty"`    // SignalR服务
	Graphql   *Server_GraphQL   `protobuf:"bytes,12,opt,name=graphql,proto3" json:"graphql,omitempty"`    // GraphQL服务
	Thrift    *Server_Thrift    `protobuf:"bytes,13,opt,name=thrift,proto3" json:"thrift,omitempty"`      // Thrift服务
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0}
}

func (x *Server) GetRest() *Server_REST {
	if x != nil {
		return x.Rest
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Server) GetWebsocket() *Server_Websocket {
	if x != nil {
		return x.Websocket
	}
	return nil
}

func (x *Server) GetMqtt() *Server_Mqtt {
	if x != nil {
		return x.Mqtt
	}
	return nil
}

func (x *Server) GetKafka() *Server_Kafka {
	if x != nil {
		return x.Kafka
	}
	return nil
}

func (x *Server) GetRabbitmq() *Server_RabbitMQ {
	if x != nil {
		return x.Rabbitmq
	}
	return nil
}

func (x *Server) GetAsynq() *Server_Asynq {
	if x != nil {
		return x.Asynq
	}
	return nil
}

func (x *Server) GetMachinery() *Server_Machinery {
	if x != nil {
		return x.Machinery
	}
	return nil
}

func (x *Server) GetSse() *Server_SSE {
	if x != nil {
		return x.Sse
	}
	return nil
}

func (x *Server) GetSocketio() *Server_SocketIO {
	if x != nil {
		return x.Socketio
	}
	return nil
}

func (x *Server) GetSignalr() *Server_SignalR {
	if x != nil {
		return x.Signalr
	}
	return nil
}

func (x *Server) GetGraphql() *Server_GraphQL {
	if x != nil {
		return x.Graphql
	}
	return nil
}

func (x *Server) GetThrift() *Server_Thrift {
	if x != nil {
		return x.Thrift
	}
	return nil
}

// REST
type Server_REST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network       string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`                                   // 网络
	Addr          string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`                                         // 服务监听地址
	Timeout       *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`                                   // 超时时间
	Cors          *Server_REST_CORS    `protobuf:"bytes,4,opt,name=cors,proto3" json:"cors,omitempty"`                                         // 服务监听地址
	Middleware    *Middleware          `protobuf:"bytes,5,opt,name=middleware,proto3" json:"middleware,omitempty"`                             // 中间件
	EnableSwagger bool                 `protobuf:"varint,6,opt,name=enable_swagger,json=enableSwagger,proto3" json:"enable_swagger,omitempty"` // 启用SwaggerUI
}

func (x *Server_REST) Reset() {
	*x = Server_REST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_REST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_REST) ProtoMessage() {}

func (x *Server_REST) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_REST.ProtoReflect.Descriptor instead.
func (*Server_REST) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Server_REST) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_REST) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_REST) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_REST) GetCors() *Server_REST_CORS {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *Server_REST) GetMiddleware() *Middleware {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *Server_REST) GetEnableSwagger() bool {
	if x != nil {
		return x.EnableSwagger
	}
	return false
}

// gPRC
type Server_GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network    string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // 网络
	Addr       string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       // 服务监听地址
	Timeout    *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"` // 超时时间
	Middleware *Middleware          `protobuf:"bytes,4,opt,name=middleware,proto3" json:"middleware,omitempty"`
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_GRPC) GetMiddleware() *Middleware {
	if x != nil {
		return x.Middleware
	}
	return nil
}

// Websocket
type Server_Websocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // 网络样式：http、https
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       // 服务监听地址
	Path    string               `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`       // 路径
	Codec   string               `protobuf:"bytes,4,opt,name=codec,proto3" json:"codec,omitempty"`     // 编解码器: json,xml,yaml...
	Timeout *durationpb.Duration `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"` // 超时时间
}

func (x *Server_Websocket) Reset() {
	*x = Server_Websocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Websocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Websocket) ProtoMessage() {}

func (x *Server_Websocket) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Websocket.ProtoReflect.Descriptor instead.
func (*Server_Websocket) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Server_Websocket) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_Websocket) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_Websocket) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Server_Websocket) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Server_Websocket) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// MQTT
type Server_Mqtt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"` // 对端网络地址
}

func (x *Server_Mqtt) Reset() {
	*x = Server_Mqtt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Mqtt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Mqtt) ProtoMessage() {}

func (x *Server_Mqtt) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Mqtt.ProtoReflect.Descriptor instead.
func (*Server_Mqtt) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Server_Mqtt) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// Kafka
type Server_Kafka struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []string `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"` // 对端网络地址
}

func (x *Server_Kafka) Reset() {
	*x = Server_Kafka{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Kafka) ProtoMessage() {}

func (x *Server_Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Kafka.ProtoReflect.Descriptor instead.
func (*Server_Kafka) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Server_Kafka) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

// RabbitMQ
type Server_RabbitMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []string `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"` // 对端网络地址
}

func (x *Server_RabbitMQ) Reset() {
	*x = Server_RabbitMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_RabbitMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_RabbitMQ) ProtoMessage() {}

func (x *Server_RabbitMQ) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_RabbitMQ.ProtoReflect.Descriptor instead.
func (*Server_RabbitMQ) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Server_RabbitMQ) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

// Asynq
type Server_Asynq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"` // 对端网络地址
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // redis登录密码
	Db       int32  `protobuf:"varint,3,opt,name=db,proto3" json:"db,omitempty"`            // 数据库索引
}

func (x *Server_Asynq) Reset() {
	*x = Server_Asynq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Asynq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Asynq) ProtoMessage() {}

func (x *Server_Asynq) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Asynq.ProtoReflect.Descriptor instead.
func (*Server_Asynq) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Server_Asynq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Server_Asynq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Server_Asynq) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

// Machinery
type Server_Machinery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brokers  []string `protobuf:"bytes,1,rep,name=brokers,proto3" json:"brokers,omitempty"`   // broker的地址，可以根据实际使用的存储介质，分别指定Redis、AMQP或AWS SQS；
	Backends []string `protobuf:"bytes,2,rep,name=backends,proto3" json:"backends,omitempty"` // backend配置，用来指定存放结果的介质的配置。可以根据需求，分别指定为：Redis、memcached或mongodb等；
}

func (x *Server_Machinery) Reset() {
	*x = Server_Machinery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Machinery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Machinery) ProtoMessage() {}

func (x *Server_Machinery) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Machinery.ProtoReflect.Descriptor instead.
func (*Server_Machinery) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Server_Machinery) GetBrokers() []string {
	if x != nil {
		return x.Brokers
	}
	return nil
}

func (x *Server_Machinery) GetBackends() []string {
	if x != nil {
		return x.Backends
	}
	return nil
}

// SSE
type Server_SSE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // 网络
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       // 服务监听地址
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"` // 超时时间
	Path    string               `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`       // 路径
	Codec   string               `protobuf:"bytes,5,opt,name=codec,proto3" json:"codec,omitempty"`     // 编解码器
}

func (x *Server_SSE) Reset() {
	*x = Server_SSE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_SSE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_SSE) ProtoMessage() {}

func (x *Server_SSE) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_SSE.ProtoReflect.Descriptor instead.
func (*Server_SSE) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Server_SSE) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_SSE) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_SSE) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_SSE) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Server_SSE) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

// SocketIO
type Server_SocketIO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server_SocketIO) Reset() {
	*x = Server_SocketIO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_SocketIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_SocketIO) ProtoMessage() {}

func (x *Server_SocketIO) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_SocketIO.ProtoReflect.Descriptor instead.
func (*Server_SocketIO) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 9}
}

// SignalR
type Server_SignalR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server_SignalR) Reset() {
	*x = Server_SignalR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_SignalR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_SignalR) ProtoMessage() {}

func (x *Server_SignalR) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_SignalR.ProtoReflect.Descriptor instead.
func (*Server_SignalR) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 10}
}

// GraphQL
type Server_GraphQL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server_GraphQL) Reset() {
	*x = Server_GraphQL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_GraphQL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GraphQL) ProtoMessage() {}

func (x *Server_GraphQL) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GraphQL.ProtoReflect.Descriptor instead.
func (*Server_GraphQL) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 11}
}

// Thrift
type Server_Thrift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Server_Thrift) Reset() {
	*x = Server_Thrift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Thrift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Thrift) ProtoMessage() {}

func (x *Server_Thrift) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Thrift.ProtoReflect.Descriptor instead.
func (*Server_Thrift) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 12}
}

type Server_REST_CORS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"` //
	Methods []string `protobuf:"bytes,2,rep,name=methods,proto3" json:"methods,omitempty"` //
	Origins []string `protobuf:"bytes,3,rep,name=origins,proto3" json:"origins,omitempty"` //
}

func (x *Server_REST_CORS) Reset() {
	*x = Server_REST_CORS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_REST_CORS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_REST_CORS) ProtoMessage() {}

func (x *Server_REST_CORS) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_REST_CORS.ProtoReflect.Descriptor instead.
func (*Server_REST_CORS) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_server_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Server_REST_CORS) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Server_REST_CORS) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *Server_REST_CORS) GetOrigins() []string {
	if x != nil {
		return x.Origins
	}
	return nil
}

var File_conf_v1_kratos_conf_server_proto protoreflect.FileDescriptor

var file_conf_v1_kratos_conf_server_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86,
	0x0d, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x45, 0x53, 0x54, 0x52, 0x04, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x34, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x6d, 0x71, 0x74, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x71, 0x74, 0x74, 0x52, 0x04,
	0x6d, 0x71, 0x74, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x31,
	0x0a, 0x08, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x61, 0x62, 0x62, 0x69, 0x74, 0x4d, 0x51, 0x52, 0x08, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x6d,
	0x71, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x73, 0x79, 0x6e, 0x71, 0x52, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x71, 0x12, 0x34, 0x0a, 0x09, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x53, 0x45,
	0x52, 0x03, 0x73, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x69,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x4f, 0x52, 0x08,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x69,
	0x66, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x68, 0x72, 0x69, 0x66, 0x74, 0x52, 0x06, 0x74,
	0x68, 0x72, 0x69, 0x66, 0x74, 0x1a, 0xc4, 0x02, 0x0a, 0x04, 0x52, 0x45, 0x53, 0x54, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x45,
	0x53, 0x54, 0x2e, 0x43, 0x4f, 0x52, 0x53, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a,
	0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x1a, 0x54, 0x0a, 0x04, 0x43, 0x4f, 0x52, 0x53, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x1a, 0x9b, 0x01, 0x0a,
	0x04, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x52, 0x0a,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x1a, 0x98, 0x01, 0x0a, 0x09, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x1a, 0x0a, 0x04, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x1a, 0x1d, 0x0a, 0x05, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73,
	0x1a, 0x20, 0x0a, 0x08, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x4d, 0x51, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x72, 0x73, 0x1a, 0x4f, 0x0a, 0x05, 0x41, 0x73, 0x79, 0x6e, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x64, 0x62, 0x1a, 0x41, 0x0a, 0x09, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x92, 0x01, 0x0a, 0x03, 0x53, 0x53, 0x45, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x1a, 0x0a, 0x0a, 0x08, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x4f, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x1a, 0x09, 0x0a, 0x07, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x1a, 0x08, 0x0a,
	0x06, 0x54, 0x68, 0x72, 0x69, 0x66, 0x74, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x78, 0x37, 0x64, 0x6f, 0x2f, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2d, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_v1_kratos_conf_server_proto_rawDescOnce sync.Once
	file_conf_v1_kratos_conf_server_proto_rawDescData = file_conf_v1_kratos_conf_server_proto_rawDesc
)

func file_conf_v1_kratos_conf_server_proto_rawDescGZIP() []byte {
	file_conf_v1_kratos_conf_server_proto_rawDescOnce.Do(func() {
		file_conf_v1_kratos_conf_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_v1_kratos_conf_server_proto_rawDescData)
	})
	return file_conf_v1_kratos_conf_server_proto_rawDescData
}

var file_conf_v1_kratos_conf_server_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_conf_v1_kratos_conf_server_proto_goTypes = []interface{}{
	(*Server)(nil),              // 0: conf.Server
	(*Server_REST)(nil),         // 1: conf.Server.REST
	(*Server_GRPC)(nil),         // 2: conf.Server.GRPC
	(*Server_Websocket)(nil),    // 3: conf.Server.Websocket
	(*Server_Mqtt)(nil),         // 4: conf.Server.Mqtt
	(*Server_Kafka)(nil),        // 5: conf.Server.Kafka
	(*Server_RabbitMQ)(nil),     // 6: conf.Server.RabbitMQ
	(*Server_Asynq)(nil),        // 7: conf.Server.Asynq
	(*Server_Machinery)(nil),    // 8: conf.Server.Machinery
	(*Server_SSE)(nil),          // 9: conf.Server.SSE
	(*Server_SocketIO)(nil),     // 10: conf.Server.SocketIO
	(*Server_SignalR)(nil),      // 11: conf.Server.SignalR
	(*Server_GraphQL)(nil),      // 12: conf.Server.GraphQL
	(*Server_Thrift)(nil),       // 13: conf.Server.Thrift
	(*Server_REST_CORS)(nil),    // 14: conf.Server.REST.CORS
	(*durationpb.Duration)(nil), // 15: google.protobuf.Duration
	(*Middleware)(nil),          // 16: conf.Middleware
}
var file_conf_v1_kratos_conf_server_proto_depIdxs = []int32{
	1,  // 0: conf.Server.rest:type_name -> conf.Server.REST
	2,  // 1: conf.Server.grpc:type_name -> conf.Server.GRPC
	3,  // 2: conf.Server.websocket:type_name -> conf.Server.Websocket
	4,  // 3: conf.Server.mqtt:type_name -> conf.Server.Mqtt
	5,  // 4: conf.Server.kafka:type_name -> conf.Server.Kafka
	6,  // 5: conf.Server.rabbitmq:type_name -> conf.Server.RabbitMQ
	7,  // 6: conf.Server.asynq:type_name -> conf.Server.Asynq
	8,  // 7: conf.Server.machinery:type_name -> conf.Server.Machinery
	9,  // 8: conf.Server.sse:type_name -> conf.Server.SSE
	10, // 9: conf.Server.socketio:type_name -> conf.Server.SocketIO
	11, // 10: conf.Server.signalr:type_name -> conf.Server.SignalR
	12, // 11: conf.Server.graphql:type_name -> conf.Server.GraphQL
	13, // 12: conf.Server.thrift:type_name -> conf.Server.Thrift
	15, // 13: conf.Server.REST.timeout:type_name -> google.protobuf.Duration
	14, // 14: conf.Server.REST.cors:type_name -> conf.Server.REST.CORS
	16, // 15: conf.Server.REST.middleware:type_name -> conf.Middleware
	15, // 16: conf.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	16, // 17: conf.Server.GRPC.middleware:type_name -> conf.Middleware
	15, // 18: conf.Server.Websocket.timeout:type_name -> google.protobuf.Duration
	15, // 19: conf.Server.SSE.timeout:type_name -> google.protobuf.Duration
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_conf_v1_kratos_conf_server_proto_init() }
func file_conf_v1_kratos_conf_server_proto_init() {
	if File_conf_v1_kratos_conf_server_proto != nil {
		return
	}
	file_conf_v1_kratos_conf_middleware_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_conf_v1_kratos_conf_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_REST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Websocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Mqtt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Kafka); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_RabbitMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Asynq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Machinery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_SSE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_SocketIO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_SignalR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_GraphQL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Thrift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_v1_kratos_conf_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_REST_CORS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_v1_kratos_conf_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_v1_kratos_conf_server_proto_goTypes,
		DependencyIndexes: file_conf_v1_kratos_conf_server_proto_depIdxs,
		MessageInfos:      file_conf_v1_kratos_conf_server_proto_msgTypes,
	}.Build()
	File_conf_v1_kratos_conf_server_proto = out.File
	file_conf_v1_kratos_conf_server_proto_rawDesc = nil
	file_conf_v1_kratos_conf_server_proto_goTypes = nil
	file_conf_v1_kratos_conf_server_proto_depIdxs = nil
}
